// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.github.dnvriend.data.Command



@SerialVersionUID(0L)
final case class PBCreatePerson(
    firstname: String = "",
    lastname: String = "",
    timestamp: Long = 0L
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[PBCreatePerson] with com.trueaccord.lenses.Updatable[PBCreatePerson] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      if (firstname != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(1, firstname) }
      if (lastname != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(2, lastname) }
      if (timestamp != 0L) { __size += com.google.protobuf.CodedOutputStream.computeInt64Size(3, timestamp) }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(output: com.google.protobuf.CodedOutputStream): Unit = {
      {
        val __v = firstname
        if (__v != "") {
          output.writeString(1, __v)
        }
      };
      {
        val __v = lastname
        if (__v != "") {
          output.writeString(2, __v)
        }
      };
      {
        val __v = timestamp
        if (__v != 0L) {
          output.writeInt64(3, __v)
        }
      };
    }
    def mergeFrom(__input: com.google.protobuf.CodedInputStream): com.github.dnvriend.data.Command.PBCreatePerson = {
      var __firstname = this.firstname
      var __lastname = this.lastname
      var __timestamp = this.timestamp
      var _done__ = false
      while (!_done__) {
        val _tag__ = __input.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __firstname = __input.readString()
          case 18 =>
            __lastname = __input.readString()
          case 24 =>
            __timestamp = __input.readInt64()
          case tag => __input.skipField(tag)
        }
      }
      com.github.dnvriend.data.Command.PBCreatePerson(
          firstname = __firstname,
          lastname = __lastname,
          timestamp = __timestamp
      )
    }
    def withFirstname(__v: String): PBCreatePerson = copy(firstname = __v)
    def withLastname(__v: String): PBCreatePerson = copy(lastname = __v)
    def withTimestamp(__v: Long): PBCreatePerson = copy(timestamp = __v)
    def getField(__field: com.google.protobuf.Descriptors.FieldDescriptor): scala.Any = {
      __field.getNumber match {
        case 1 => {
          val __t = firstname
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = lastname
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = timestamp
          if (__t != 0L) __t else null
        }
      }
    }
    override def toString: String = com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.github.dnvriend.data.Command.PBCreatePerson
}

object PBCreatePerson extends com.trueaccord.scalapb.GeneratedMessageCompanion[PBCreatePerson] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[PBCreatePerson] = this
  def fromFieldsMap(__fieldsMap: Map[com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.github.dnvriend.data.Command.PBCreatePerson = {
    require(__fieldsMap.keys.forall(_.getContainingType() == descriptor), "FieldDescriptor does not match message type.")
    val __fields = descriptor.getFields
    com.github.dnvriend.data.Command.PBCreatePerson(
      __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[String],
      __fieldsMap.getOrElse(__fields.get(1), "").asInstanceOf[String],
      __fieldsMap.getOrElse(__fields.get(2), 0L).asInstanceOf[Long]
    )
  }
  def descriptor: com.google.protobuf.Descriptors.Descriptor = CommandProto.descriptor.getMessageTypes.get(0)
  def messageCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__field)
  def enumCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__field)
  lazy val defaultInstance = com.github.dnvriend.data.Command.PBCreatePerson(
  )
  implicit class PBCreatePersonLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, PBCreatePerson]) extends com.trueaccord.lenses.ObjectLens[UpperPB, PBCreatePerson](_l) {
    def firstname: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.firstname)((c_, f_) => c_.copy(firstname = f_))
    def lastname: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.lastname)((c_, f_) => c_.copy(lastname = f_))
    def timestamp: com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.timestamp)((c_, f_) => c_.copy(timestamp = f_))
  }
  final val FIRSTNAME_FIELD_NUMBER = 1
  final val LASTNAME_FIELD_NUMBER = 2
  final val TIMESTAMP_FIELD_NUMBER = 3
}
